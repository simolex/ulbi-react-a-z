{"version":3,"sources":["components/UI/modal/UiModal.module.css","components/UI/pagination/UiPagination.module.css","components/UI/loader/UiLoader.module.css","components/UI/input/UiInput.module.css","components/UI/button/UiButton.module.css","context/index.js","components/pages/About.jsx","components/pages/Error.jsx","hooks/useFetching.js","API/PostService.js","components/UI/loader/UiLoader.jsx","components/pages/PostIdPage.jsx","components/UI/input/UiInput.jsx","components/UI/select/UiSelect.jsx","components/PostFilter.jsx","components/UI/button/UiButton.jsx","components/PostForm.jsx","components/PostItem.jsx","components/PostList.jsx","components/UI/modal/UiModal.jsx","utils/pages.js","components/UI/pagination/UiPagination.jsx","hooks/usePosts.js","components/pages/Posts.jsx","hooks/useObserver.js","components/pages/Login.jsx","router/index.js","components/AppRouter.jsx","components/UI/navbar/UiNavbar.jsx","App.js","index.js"],"names":["module","exports","AuthContext","createContext","About","Error","style","color","useFetching","callback","useState","isLoading","setIsLoading","error","setError","fetching","message","PostService","limit","page","axios","get","params","_limit","_page","response","id","UiLoader","className","classes","loader","PostIdPage","useParams","post","setPost","comments","setComments","getById","resp","data","fetchPostById","getCommentsByPostId","fetchComments","isLoadingComments","useEffect","title","map","comm","marginTop","name","body","UiInput","React","forwardRef","props","ref","uiInput","UiSelect","options","defaultValue","value","onChange","e","target","disabled","option","PostFilter","filter","setFilter","query","placeholder","sort","selestedSort","UiButton","children","uiBtn","PostForm","create","type","onClick","preventDefault","newPost","Date","now","PostItem","number","remove","router","useNavigate","PostList","posts","length","textAlign","TransitionGroup","index","CSSTransition","timeout","classNames","UiModal","visible","setVisible","rootClasses","uiModal","push","active","join","uiModalContent","stopPropagation","getPageCount","totalPages","Math","ceil","UiPagination","changePage","pagesArray","i","getPagesArray","defaultClasses","currentClasses","page__current","page__wrapper","p","usePosts","sortedPosts","useMemo","a","b","localeCompare","useSortedPosts","toLowerCase","includes","Posts","setPosts","modal","setModal","setTotalPages","setLimit","setPage","sortedAndSearchedPosts","lastElement","useRef","getAll","totalCount","headers","fetchPosts","isPostsLoading","postError","canLoad","observer","current","disconnect","IntersectionObserver","entries","isIntersecting","observe","useObserver","margin","height","backgroundColor","display","justifyContent","Login","setIsAuth","useContext","onSubmit","localStorage","setItem","privateRoutes","path","element","to","replace","publicRoutes","AppRouter","isAuth","r","UiNavbar","removeItem","App","getItem","Provider","basename","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1b308773.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"uiModal\":\"UiModal_uiModal__10Dt5\",\"uiModalContent\":\"UiModal_uiModalContent__3Orbb\",\"active\":\"UiModal_active__9U5B9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page__wrapper\":\"UiPagination_page__wrapper__2Kjyh\",\"page\":\"UiPagination_page__12JjC\",\"page__current\":\"UiPagination_page__current__1cRi0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"UiLoader_loader__1JYFW\",\"rotateLoader\":\"UiLoader_rotateLoader__2T0zw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"uiInput\":\"UiInput_uiInput__2dFz6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"uiBtn\":\"UiButton_uiBtn__2kfzK\"};","import { createContext } from \"react\";\r\n\r\nexport const AuthContext = createContext(null);\r\n","import React from \"react\";\r\n\r\nconst About = () => {\r\n  return (\r\n    <div>\r\n      <h1>Это учебное приложение</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React from \"react\";\r\n\r\nconst Error = () => {\r\n  return (\r\n    <div>\r\n      <h1 style={{ color: \"magenta\" }}> Страница не существует!!!!</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Error;\r\n","import { useState } from \"react\";\r\n\r\nexport const useFetching = (callback) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const fetching = async (...args) => {\r\n    try {\r\n      setIsLoading(true);\r\n      await callback(...args);\r\n    } catch (err) {\r\n      setError(err.message);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n  return [fetching, isLoading, error];\r\n};\r\n","import axios from \"axios\";\r\n\r\nexport default class PostService {\r\n  static async getAll(limit = 10, page = 1) {\r\n    const response = await axios.get(\"https://jsonplaceholder.typicode.com/posts\", {\r\n      params: {\r\n        _limit: limit,\r\n        _page: page,\r\n      },\r\n    });\r\n    return response;\r\n  }\r\n  static async getById(id) {\r\n    const response = await axios.get(`https://jsonplaceholder.typicode.com/posts/${id}`);\r\n    return response;\r\n  }\r\n  static async getCommentsByPostId(id) {\r\n    const response = await axios.get(`https://jsonplaceholder.typicode.com/posts/${id}/comments`);\r\n    return response;\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nimport classes from \"./UiLoader.module.css\";\r\n\r\nconst UiLoader = () => {\r\n  return <div className={classes.loader}></div>;\r\n};\r\n\r\nexport default UiLoader;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useFetching } from \"../../hooks/useFetching\";\r\nimport PostService from \"../../API/PostService\";\r\nimport UiLoader from \"../UI/loader/UiLoader\";\r\n\r\nconst PostIdPage = () => {\r\n  const params = useParams();\r\n  const [post, setPost] = useState({});\r\n  const [comments, setComments] = useState([]);\r\n  const [fetchPostById, isLoading, error] = useFetching(async (id) => {\r\n    const resp = await PostService.getById(id);\r\n    setPost(resp.data);\r\n  });\r\n\r\n  const [fetchComments, isLoadingComments, errorComments] = useFetching(async (id) => {\r\n    const resp = await PostService.getCommentsByPostId(id);\r\n    setComments(resp.data);\r\n  });\r\n\r\n  useEffect(() => {\r\n    fetchPostById(params.id);\r\n    fetchComments(params.id);\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Это пост ID ={params.id}</h1>\r\n      {isLoading ? (\r\n        <UiLoader />\r\n      ) : (\r\n        <div>\r\n          {post.id}. {post.title}\r\n        </div>\r\n      )}\r\n      <h2>Комментарии:</h2>\r\n      {isLoadingComments ? (\r\n        <UiLoader />\r\n      ) : (\r\n        <div>\r\n          {comments.map((comm) => (\r\n            <div style={{ marginTop: \"15px\" }} key={comm.id}>\r\n              <h5>\r\n                {comm.id}. {comm.name}\r\n              </h5>\r\n              <div>{comm.body}</div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostIdPage;\r\n","import React from \"react\";\r\nimport classes from \"./UiInput.module.css\";\r\n\r\nconst UiInput = React.forwardRef((props, ref) => {\r\n  return <input ref={ref} {...props} className={classes.uiInput} />;\r\n});\r\n\r\nexport default UiInput;\r\n","import React from \"react\";\r\n\r\nconst UiSelect = ({ options, defaultValue, value, onChange }) => {\r\n  return (\r\n    <select value={value} onChange={(e) => onChange(e.target.value)}>\r\n      <option value=\"\" disabled>\r\n        {defaultValue}\r\n      </option>\r\n      {options.map((option) => (\r\n        <option key={option.value} value={option.value}>\r\n          {option.name}\r\n        </option>\r\n      ))}\r\n    </select>\r\n  );\r\n};\r\n\r\nexport default UiSelect;\r\n","import React from \"react\";\r\nimport UiInput from \"./UI/input/UiInput\";\r\nimport UiSelect from \"./UI/select/UiSelect\";\r\n\r\nconst PostFilter = ({ filter, setFilter }) => {\r\n  return (\r\n    <div>\r\n      <UiInput\r\n        value={filter.query}\r\n        onChange={(e) => setFilter({ ...filter, query: e.target.value })}\r\n        placeholder=\"Поиск...\"\r\n      />\r\n      <UiSelect\r\n        value={filter.sort}\r\n        onChange={(selestedSort) => setFilter({ ...filter, sort: selestedSort })}\r\n        defaultValue=\"Сортировка\"\r\n        options={[\r\n          { value: \"title\", name: \"По наименованию\" },\r\n          { value: \"body\", name: \"По описанию\" },\r\n        ]}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostFilter;\r\n","import React from \"react\";\r\nimport classes from \"./UiButton.module.css\";\r\n\r\nconst UiButton = ({ children, ...props }) => {\r\n  return (\r\n    <button className={classes.uiBtn} {...props}>\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default UiButton;\r\n","import React, { useState } from \"react\";\r\nimport UiButton from \"./UI/button/UiButton\";\r\nimport UiInput from \"./UI/input/UiInput\";\r\n\r\nconst PostForm = ({ create }) => {\r\n  const [post, setPost] = useState({ title: \"\", body: \"\" });\r\n  const AddNewPost = (e) => {\r\n    e.preventDefault();\r\n    const newPost = {\r\n      id: Date.now(),\r\n      ...post,\r\n    };\r\n    create(newPost);\r\n    setPost({ title: \"\", body: \"\" });\r\n    // console.log(bodyInputRef.current.value);\r\n  };\r\n  // const bodyInputRef = useRef();\r\n  return (\r\n    <form>\r\n      {/* Управляемый компонент */}\r\n      <UiInput\r\n        value={post.title}\r\n        onChange={(e) => setPost({ ...post, title: e.target.value })}\r\n        type=\"text\"\r\n        placeholder=\"Название поста\"\r\n      />\r\n      {/* ./Управляемый компонент */}\r\n\r\n      <UiInput\r\n        value={post.body}\r\n        onChange={(e) => setPost({ ...post, body: e.target.value })}\r\n        type=\"text\"\r\n        placeholder=\"Описание поста\"\r\n      />\r\n\r\n      {/* Неуправляемый\\ Неконтролируемый компонент */}\r\n      {/* <UiInput ref={bodyInputRef} type=\"text\" placeholder=\"Описание поста\" /> */}\r\n      {/* ./Неуправляемый\\ Неконтролируемый компонент */}\r\n\r\n      <UiButton onClick={AddNewPost}>Создать пост</UiButton>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default PostForm;\r\n","import React from \"react\";\r\nimport UiButton from \"./UI/button/UiButton\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst PostItem = ({ number, post, remove }) => {\r\n  const router = useNavigate();\r\n  return (\r\n    <div className=\"post\">\r\n      <div className=\"post__content\">\r\n        <strong>\r\n          {number}. {post.title}\r\n        </strong>\r\n        <div>{post.body}</div>\r\n      </div>\r\n      <div className=\"post__btns\">\r\n        <UiButton onClick={() => router(`/posts/${post.id}`)}> Открыть</UiButton>\r\n        <UiButton onClick={() => remove(post)}> Удалить</UiButton>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostItem;\r\n","import React from \"react\";\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\r\nimport PostItem from \"./PostItem\";\r\n\r\nconst PostList = ({ posts, title, remove }) => {\r\n  if (!posts.length) {\r\n    return <h1 style={{ textAlign: \"center\" }}>Посты отсутствуют!</h1>;\r\n  }\r\n  return (\r\n    <div>\r\n      <h1 style={{ textAlign: \"center\" }}>{title}</h1>\r\n      <TransitionGroup>\r\n        {posts.map((post, index) => (\r\n          <CSSTransition key={post.id} timeout={500} classNames=\"post\">\r\n            <PostItem remove={remove} number={post.id} post={post} />\r\n          </CSSTransition>\r\n        ))}\r\n      </TransitionGroup>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostList;\r\n","import React from \"react\";\r\nimport classes from \"./UiModal.module.css\";\r\n\r\nconst UiModal = ({ children, visible, setVisible }) => {\r\n  const rootClasses = [classes.uiModal];\r\n  if (visible) {\r\n    rootClasses.push(classes.active);\r\n  }\r\n  return (\r\n    <div className={rootClasses.join(\" \")} onClick={() => setVisible(false)}>\r\n      <div className={classes.uiModalContent} onClick={(e) => e.stopPropagation()}>\r\n        {children}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UiModal;\r\n","export const getPageCount = (totalPages, limit) => {\r\n  return Math.ceil(totalPages / limit);\r\n};\r\n\r\nexport const getPagesArray = (totalPages) => {\r\n  // TODO: useMemo\r\n  const pagesArray = [];\r\n  for (let i = 0; i < totalPages; i++) {\r\n    pagesArray.push(i + 1);\r\n  }\r\n  return pagesArray;\r\n};\r\n","import React from \"react\";\r\nimport { getPagesArray } from \"../../../utils/pages\";\r\nimport classes from \"./UiPagination.module.css\";\r\n\r\nconst UiPagination = ({ totalPages, page, changePage }) => {\r\n  // TODO: useMemo\r\n  let pagesArray = getPagesArray(totalPages);\r\n\r\n  const defaultClasses = classes.page;\r\n  const currentClasses = [defaultClasses, classes.page__current].join(\" \");\r\n\r\n  return (\r\n    <div className={classes.page__wrapper}>\r\n      {pagesArray.map((p) => (\r\n        <span\r\n          onClick={() => {\r\n            changePage(p);\r\n          }}\r\n          key={p}\r\n          className={page === p ? currentClasses : defaultClasses}\r\n        >\r\n          {p}\r\n        </span>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UiPagination;\r\n","import { useMemo } from \"react\";\r\n\r\nexport const useSortedPosts = (posts, sort) => {\r\n  const sortedPosts = useMemo(() => {\r\n    if (sort) {\r\n      return [...posts].sort((a, b) => a[sort].localeCompare(b[sort]));\r\n    }\r\n    return posts;\r\n  }, [sort, posts]);\r\n\r\n  return sortedPosts;\r\n};\r\n\r\nexport const usePosts = ({ posts, sort, query }) => {\r\n  const sortedPosts = useSortedPosts(posts, sort);\r\n  const sortedAndSearchedPosts = useMemo(() => {\r\n    return sortedPosts.filter((post) => post.title.toLowerCase().includes(query.toLowerCase()));\r\n  }, [query, sortedPosts]);\r\n  return sortedAndSearchedPosts;\r\n};\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport PostService from \"../../API/PostService\";\r\n// import { createPortal } from \"react-dom\";\r\nimport PostFilter from \"../PostFilter\";\r\nimport PostForm from \"../PostForm\";\r\nimport PostList from \"../PostList\";\r\nimport UiButton from \"../UI/button/UiButton\";\r\nimport UiLoader from \"../UI/loader/UiLoader\";\r\nimport UiModal from \"../UI/modal/UiModal\";\r\nimport UiPagination from \"../UI/pagination/UiPagination\";\r\nimport { useFetching } from \"../../hooks/useFetching\";\r\nimport { usePosts } from \"../../hooks/usePosts\";\r\nimport \"../../styles/App.css\";\r\nimport { getPageCount } from \"../../utils/pages\";\r\nimport { useObserver } from \"../../hooks/useObserver\";\r\nimport UiSelect from \"../UI/select/UiSelect\";\r\n\r\nconst Posts = () => {\r\n  const [posts, setPosts] = useState([]);\r\n  const [filter, setFilter] = useState({ sort: \"\", query: \"\" });\r\n  const [modal, setModal] = useState(false);\r\n  const [totalPages, setTotalPages] = useState(0);\r\n  const [limit, setLimit] = useState(10);\r\n  const [page, setPage] = useState(1);\r\n  const sortedAndSearchedPosts = usePosts({ posts, sort: filter.sort, query: filter.query });\r\n  const lastElement = useRef();\r\n\r\n  const [fetchPosts, isPostsLoading, postError] = useFetching(async (limit, page) => {\r\n    const resp = await PostService.getAll(limit, page);\r\n    setPosts([...posts, ...resp.data]);\r\n    const totalCount = resp.headers[\"x-total-count\"];\r\n    setTotalPages(getPageCount(totalCount, limit));\r\n  });\r\n\r\n  useObserver(lastElement, page < totalPages, isPostsLoading, () => {\r\n    setPage(page + 1);\r\n  });\r\n\r\n  useEffect(() => {\r\n    fetchPosts(limit, page);\r\n  }, [page, limit]);\r\n\r\n  const createPost = (newPost) => {\r\n    setPosts([...posts, newPost]);\r\n    setModal(false);\r\n  };\r\n\r\n  const removePost = (post) => {\r\n    setPosts(posts.filter((p) => p.id !== post.id));\r\n  };\r\n\r\n  const changePage = (page) => {\r\n    setPage(page);\r\n    fetchPosts(limit, page);\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <UiButton style={{ marginTop: \"30px\" }} onClick={() => setModal(true)}>\r\n        Создать пост\r\n      </UiButton>\r\n      <UiModal visible={modal} setVisible={setModal}>\r\n        <PostForm create={createPost} />\r\n      </UiModal>\r\n      <hr style={{ margin: \"15px 0\" }} />\r\n      <PostFilter filter={filter} setFilter={setFilter} />\r\n      <UiSelect\r\n        value={limit}\r\n        onChange={(value) => setLimit(value)}\r\n        defaultValue=\"Кол-во постов на странице\"\r\n        options={[\r\n          { value: 5, name: \"5\" },\r\n          { value: 10, name: \"10\" },\r\n          { value: 20, name: \"20\" },\r\n          { value: -1, name: \"Все\" },\r\n        ]}\r\n      />\r\n      {postError && <h1>Произошла ошибка: {postError}</h1>}\r\n      <PostList remove={removePost} posts={sortedAndSearchedPosts} title={\"Список постов про JS\"} />\r\n      <div ref={lastElement} style={{ height: \"20px\", backgroundColor: \"yellow\" }}></div>\r\n      {isPostsLoading && (\r\n        <div style={{ display: \"flex\", justifyContent: \"center\", marginTop: \"50px\" }}>\r\n          <UiLoader />\r\n        </div>\r\n      )}\r\n      <UiPagination page={page} changePage={changePage} totalPages={totalPages} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Posts;\r\n","import { useEffect, useRef } from \"react\";\r\n\r\nexport const useObserver = (ref, canLoad, isLoading, callback) => {\r\n  const observer = useRef();\r\n  useEffect(() => {\r\n    if (isLoading) {\r\n      return;\r\n    }\r\n    if (observer.current) {\r\n      observer.current.disconnect();\r\n    }\r\n    const handleIntersect = (entries, observer) => {\r\n      if (entries[0].isIntersecting && canLoad) {\r\n        callback();\r\n      }\r\n    };\r\n\r\n    observer.current = new IntersectionObserver(handleIntersect);\r\n    observer.current.observe(ref.current);\r\n  }, [isLoading]);\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { AuthContext } from \"../../context\";\r\nimport UiButton from \"../UI/button/UiButton\";\r\nimport UiInput from \"../UI/input/UiInput\";\r\n\r\nconst Login = () => {\r\n  const { setIsAuth } = useContext(AuthContext);\r\n\r\n  const logining = (e) => {\r\n    e.preventDefault();\r\n    setIsAuth(true);\r\n    localStorage.setItem(\"auth\", \"true\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Войти</h1>\r\n      <form onSubmit={logining}>\r\n        <UiInput type=\"text\" placeholder=\"Введите логин\" />\r\n        <UiInput type=\"password\" placeholder=\"Введите пароль\" />\r\n        <UiButton>Войти</UiButton>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import About from \"../components/pages/About\";\r\nimport Error from \"../components/pages/Error\";\r\nimport PostIdPage from \"../components/pages/PostIdPage\";\r\nimport Posts from \"../components/pages/Posts\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport Login from \"../components/pages/Login\";\r\n\r\nexport const privateRoutes = [\r\n  { path: \"/about\", element: <About /> },\r\n  { path: \"/posts/:id\", element: <PostIdPage /> },\r\n  { path: \"/posts\", element: <Posts /> },\r\n  { path: \"/*\", element: <Error /> },\r\n  { path: \"/login\", element: <Navigate to=\"/posts\" replace /> },\r\n  { path: \"/\", element: <Navigate to=\"/posts\" replace /> },\r\n];\r\n\r\nexport const publicRoutes = [\r\n  { path: \"/login\", element: <Login /> },\r\n  { path: \"/*\", element: <Navigate to=\"/login\" replace /> },\r\n];\r\n","import React, { useContext } from \"react\";\r\nimport { Route, Routes } from \"react-router-dom\";\r\nimport { AuthContext } from \"../context\";\r\nimport { privateRoutes, publicRoutes } from \"../router\";\r\nimport UiLoader from \"./UI/loader/UiLoader\";\r\nconst AppRouter = () => {\r\n  const { isAuth, isLoading } = useContext(AuthContext);\r\n\r\n  if (isLoading) {\r\n    return <UiLoader />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"main\">\r\n      {isAuth ? (\r\n        <Routes>\r\n          {privateRoutes.map((r) => (\r\n            <Route path={r.path} element={r.element} key={r.path} />\r\n          ))}\r\n        </Routes>\r\n      ) : (\r\n        <Routes>\r\n          {publicRoutes.map((r) => (\r\n            <Route path={r.path} element={r.element} key={r.path} />\r\n          ))}\r\n        </Routes>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","import React, { useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { AuthContext } from \"../../../context\";\r\nimport UiButton from \"../button/UiButton\";\r\n\r\nconst UiNavbar = () => {\r\n  const { isAuth, setIsAuth } = useContext(AuthContext);\r\n\r\n  const logouting = () => {\r\n    setIsAuth(false);\r\n    localStorage.removeItem(\"auth\");\r\n  };\r\n  return (\r\n    <div className=\"navbar\">\r\n      {isAuth ? <UiButton onClick={logouting}>Выйти</UiButton> : \"\"}\r\n      <div className=\"navbar__wrapper\">\r\n        <Link to=\"/about\" className=\"navbar__links\">\r\n          О Сайте\r\n        </Link>\r\n        <Link to=\"/posts\" className=\"navbar__links\">\r\n          Посты\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UiNavbar;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport AppRouter from \"./components/AppRouter\";\r\n\r\nimport UiNavbar from \"./components/UI/navbar/UiNavbar\";\r\nimport { AuthContext } from \"./context\";\r\n\r\nfunction App() {\r\n  const [isAuth, setIsAuth] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    if (localStorage.getItem(\"auth\")) {\r\n      setIsAuth(true);\r\n      setIsLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        isAuth,\r\n        setIsAuth,\r\n        isLoading,\r\n      }}\r\n    >\r\n      <BrowserRouter basename=\"/ulbi-react-a-z\">\r\n        <UiNavbar />\r\n        <AppRouter />\r\n      </BrowserRouter>\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}